package iwb.domain.db;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Immutable;

import iwb.util.GenericUtil;

// Generated Feb 15, 2007 2:10:19 PM by Hibernate Tools 3.2.0.b9

/**
 * WTable generated by hbm2java
 */
@Entity
@Immutable
@Table(name="w5_table_filter",schema="iwb")
public class W5TableFilter implements java.io.Serializable, W5Base {

	private int tableFilterId;
	private int tableId;
	private String accessFilterRoles;
	private String accessFilterUsers;
	private String accessFilterDealers;

	private String accessViewSql;
	private String accessUpdateSql;
	private String accessDeleteSql;

	public W5TableFilter() {
	}


	@Column(name="table_id")
	public int getTableId() {
		return this.tableId;
	}

	public void setTableId(int tableId) {
		this.tableId = tableId;
	}
	@Id
	@Column(name="table_filter_id")
	public int getTableFilterId() {
		return tableFilterId;
	}

	public void setTableFilterId(int tableFilterId) {
		this.tableFilterId = tableFilterId;
	}


	@Column(name="access_view_sql")
	public String getAccessViewSql() {
		return accessViewSql;
	}

	public void setAccessViewSql(String accessViewSql) {
		this.accessViewSql = accessViewSql;
	}

	@Column(name="access_update_sql")
	public String getAccessUpdateSql() {
		return accessUpdateSql;
	}

	public void setAccessUpdateSql(String accessUpdateSql) {
		this.accessUpdateSql = accessUpdateSql;
	}

	@Column(name="access_delete_sql")
	public String getAccessDeleteSql() {
		return accessDeleteSql;
	}

	public void setAccessDeleteSql(String accessDeleteSql) {
		this.accessDeleteSql = accessDeleteSql;
	}

	@Column(name="access_filter_roles")
	public String getAccessFilterRoles() {
		return accessFilterRoles;
	}


	public void setAccessFilterRoles(String accessFilterRoles) {
		this.accessFilterRoles = accessFilterRoles;
	}

	@Column(name="access_filter_users")
	public String getAccessFilterUsers() {
		return accessFilterUsers;
	}


	@Column(name="access_filter_dealers")
	public String getAccessFilterDealers() {
		return accessFilterDealers;
	}


	public void setAccessFilterDealers(String accessFilterDealers) {
		this.accessFilterDealers = accessFilterDealers;
	}


	public void setAccessFilterUsers(String accessFilterUsers) {
		this.accessFilterUsers = accessFilterUsers;
	}


	@Transient
	public boolean safeEquals(W5Base q){
		if(q==null)return false;
		W5TableFilter t = (W5TableFilter)q;
		return 
			this.tableFilterId == t.getTableFilterId() && 
			this.tableId == t.getTableId() && 
			GenericUtil.safeEquals(this.accessFilterRoles, t.getAccessFilterRoles()) && 
			GenericUtil.safeEquals(this.accessFilterUsers, t.getAccessFilterUsers()) && 
			GenericUtil.safeEquals(this.accessFilterDealers, t.getAccessFilterDealers()) && 
	
			GenericUtil.safeEquals(this.accessViewSql, t.getAccessViewSql()) && 
			GenericUtil.safeEquals(this.accessUpdateSql, t.getAccessUpdateSql()) && 
			GenericUtil.safeEquals(this.accessDeleteSql, t.getAccessDeleteSql());
	}
	private String projectUuid;
	@Id	
	@Column(name="project_uuid")
	public String getProjectUuid() {
		return projectUuid;
	}

	public void setProjectUuid(String projectUuid) {
		this.projectUuid = projectUuid;
	}
	
}
